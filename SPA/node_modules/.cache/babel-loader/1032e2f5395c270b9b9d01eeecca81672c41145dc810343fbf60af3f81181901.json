{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebva\\\\Desktop\\\\SPA-React\\\\SPA\\\\src\\\\components\\\\Button.js\";\nimport className from 'classnames';\nimport { GoSync } from 'react-icons/go';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Button(_ref) {\n  let {\n    children,\n    primary,\n    secondary,\n    success,\n    warning,\n    danger,\n    outline,\n    rounded,\n    loading,\n    ...rest\n  } = _ref;\n  const classes = className(rest.className, 'flex items-center px-3 py-1.5 border h-8', {\n    'opacity-80': loading,\n    'border-blue-500 bg-blue-500 text-white': primary,\n    'border-gray-900 bg-gray-900 text-white': secondary,\n    'border-green-500 bg-green-500 text-white': success,\n    'border-yellow-400 bg-yellow-400 text-white': warning,\n    'border-red-500 bg-red-500 text-white': danger,\n    'rounded-full': rounded,\n    'bg-white': outline,\n    'text-blue-500': outline && primary,\n    'text-gray-900': outline && secondary,\n    'text-green-500': outline && success,\n    'text-yellow-400': outline && warning,\n    'text-red-500': outline && danger\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    ...rest,\n    disabled: loading,\n    className: classes,\n    children: loading ? /*#__PURE__*/_jsxDEV(GoSync, {\n      className: \"animate-spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 18\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = Button;\nButton.propTypes = {\n  checkVariationValue: _ref2 => {\n    let {\n      primary,\n      secondary,\n      success,\n      warning,\n      danger\n    } = _ref2;\n    const count = Number(!!primary) + Number(!!secondary) + Number(!!warning) + Number(!!success) + Number(!!danger);\n    if (count > 1) {\n      return new Error('Only one of primary, secondary, success, warning, danger can be true');\n    }\n  }\n};\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["className","GoSync","jsxDEV","_jsxDEV","Button","_ref","children","primary","secondary","success","warning","danger","outline","rounded","loading","rest","classes","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","checkVariationValue","_ref2","count","Number","Error","$RefreshReg$"],"sources":["C:/Users/sebva/Desktop/SPA-React/SPA/src/components/Button.js"],"sourcesContent":["import className from 'classnames';\nimport { GoSync } from 'react-icons/go';\n\nfunction Button({\n  children,\n  primary,\n  secondary,\n  success,\n  warning,\n  danger,\n  outline,\n  rounded,\n  loading,\n  ...rest\n}) {\n  const classes = className(\n    rest.className,\n    'flex items-center px-3 py-1.5 border h-8',\n    {\n      'opacity-80': loading,\n      'border-blue-500 bg-blue-500 text-white': primary,\n      'border-gray-900 bg-gray-900 text-white': secondary,\n      'border-green-500 bg-green-500 text-white': success,\n      'border-yellow-400 bg-yellow-400 text-white': warning,\n      'border-red-500 bg-red-500 text-white': danger,\n      'rounded-full': rounded,\n      'bg-white': outline,\n      'text-blue-500': outline && primary,\n      'text-gray-900': outline && secondary,\n      'text-green-500': outline && success,\n      'text-yellow-400': outline && warning,\n      'text-red-500': outline && danger,\n    }\n  );\n\n  return (\n    <button {...rest} disabled={loading} className={classes}>\n      {loading ? <GoSync className=\"animate-spin\" /> : children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  checkVariationValue: ({ primary, secondary, success, warning, danger }) => {\n    const count =\n      Number(!!primary) +\n      Number(!!secondary) +\n      Number(!!warning) +\n      Number(!!success) +\n      Number(!!danger);\n\n    if (count > 1) {\n      return new Error(\n        'Only one of primary, secondary, success, warning, danger can be true'\n      );\n    }\n  },\n};\n\nexport default Button;\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,MAAM,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,MAAMA,CAAAC,IAAA,EAWZ;EAAA,IAXa;IACdC,QAAQ;IACRC,OAAO;IACPC,SAAS;IACTC,OAAO;IACPC,OAAO;IACPC,MAAM;IACNC,OAAO;IACPC,OAAO;IACPC,OAAO;IACP,GAAGC;EACL,CAAC,GAAAV,IAAA;EACC,MAAMW,OAAO,GAAGhB,SAAS,CACvBe,IAAI,CAACf,SAAS,EACd,0CAA0C,EAC1C;IACE,YAAY,EAAEc,OAAO;IACrB,wCAAwC,EAAEP,OAAO;IACjD,wCAAwC,EAAEC,SAAS;IACnD,0CAA0C,EAAEC,OAAO;IACnD,4CAA4C,EAAEC,OAAO;IACrD,sCAAsC,EAAEC,MAAM;IAC9C,cAAc,EAAEE,OAAO;IACvB,UAAU,EAAED,OAAO;IACnB,eAAe,EAAEA,OAAO,IAAIL,OAAO;IACnC,eAAe,EAAEK,OAAO,IAAIJ,SAAS;IACrC,gBAAgB,EAAEI,OAAO,IAAIH,OAAO;IACpC,iBAAiB,EAAEG,OAAO,IAAIF,OAAO;IACrC,cAAc,EAAEE,OAAO,IAAID;EAC7B,CAAC,CACF;EAED,oBACER,OAAA;IAAA,GAAYY,IAAI;IAAEE,QAAQ,EAAEH,OAAQ;IAACd,SAAS,EAAEgB,OAAQ;IAAAV,QAAA,EACrDQ,OAAO,gBAAGX,OAAA,CAACF,MAAM;MAACD,SAAS,EAAC;IAAc;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,GAAGf;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClD;AAEb;AAACC,EAAA,GArCQlB,MAAM;AAuCfA,MAAM,CAACmB,SAAS,GAAG;EACjBC,mBAAmB,EAAEC,KAAA,IAAsD;IAAA,IAArD;MAAElB,OAAO;MAAEC,SAAS;MAAEC,OAAO;MAAEC,OAAO;MAAEC;IAAO,CAAC,GAAAc,KAAA;IACpE,MAAMC,KAAK,GACTC,MAAM,CAAC,CAAC,CAACpB,OAAO,CAAC,GACjBoB,MAAM,CAAC,CAAC,CAACnB,SAAS,CAAC,GACnBmB,MAAM,CAAC,CAAC,CAACjB,OAAO,CAAC,GACjBiB,MAAM,CAAC,CAAC,CAAClB,OAAO,CAAC,GACjBkB,MAAM,CAAC,CAAC,CAAChB,MAAM,CAAC;IAElB,IAAIe,KAAK,GAAG,CAAC,EAAE;MACb,OAAO,IAAIE,KAAK,CACd,sEAAsE,CACvE;IACH;EACF;AACF,CAAC;AAED,eAAexB,MAAM;AAAC,IAAAkB,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}